list ::= separator? ( item separator )* item

start ::= (namespace | top_statement)*

namespace ::= T_NAMESPACE namespace_name? code_block | T_NAMESPACE namespace_name ';' top_statements

namespace_name ::= T_NS_SEPARATOR? (T_STRING T_NS_SEPARATOR)* T_STRING

top_statements ::= top_statement*

top_statement ::= function | class | interface | trait | inner_statement

inner_statements ::= inner_statement*

inner_statement ::= '{' inner_statements '}' | token

code_block ::= '{' (inner_statements | top_statements) '}'

function ::= T_FUNCTION '&'?  T_STRING '(' parameter_list ')' code_block

parameter_list ::= (parameter ',')* parameter?

parameter ::= type? '&'? T_VARIABLE ('=' scallar)?

type ::= T_ARRAY | namespace_name

class ::= class_scope? T_CLASS '@todo'

interface ::= class_scope? T_INTERFACE '@todo'

trait ::= class_scope? T_TRAIT '@todo'